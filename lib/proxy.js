// Generated by CoffeeScript 1.9.3
(function() {
  var Cache, cache, http, httpProxy, model, port, portForHostname, proxy, server;

  http = require('http');

  httpProxy = require('http-proxy');

  Cache = require('generic-cache');

  model = require('./model');

  cache = new Cache();

  proxy = httpProxy.createProxyServer({});

  portForHostname = function(hostname, callback) {
    var port;
    port = cache.get(hostname);
    if (port) {
      return callback(null, port);
    }
    return model.getApplicationForHostname(hostname, function(err, application) {
      if (err) {
        return callback(err);
      }
      return model.portForApplication(application.id, function(err, port) {
        if (!err) {
          cache.set(hostname, port);
        }
        return callback(err, port);
      });
    });
  };

  server = http.createServer(function(req, res) {
    var hostname;
    hostname = req.headers.host;
    return portForHostname(hostname, function(err, port) {
      if (err) {
        res.write(err.message);
        return res.end();
      }
      return proxy.web(req, res, {
        target: 'http://localhost:' + port
      }, function(err) {
        if (err) {
          res.write(err.message);
          return res.end();
        }
      });
    });
  });

  server.on('upgrade', function(req, socket, head) {
    return proxy.ws(req, socket, head);
  });

  port = process.env.PORT || 3005;

  console.log("listening on port", port);

  server.listen(port, function(err) {
    if (err) {
      return console.error(err);
    }
  });

}).call(this);
